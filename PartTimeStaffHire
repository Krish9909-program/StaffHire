public class PartTimeStaffHire extends StaffHire {
    private double workingHour;
    private double wagesPerHour;
    private String shifts;
    private boolean terminated;

    public PartTimeStaffHire(int vacancyNumber, String designation, String jobType, String staffName, 
                             String joiningDate, String qualification, String appointedBy, boolean joined, 
                             double workingHour, double wagesPerHour, String shifts, boolean terminated) {
        super(vacancyNumber);
        setDesignation(designation);     
        setJobType(jobType);
        setStaffName(staffName);
        setJoiningDate(joiningDate);
        setQualification(qualification);
        setAppointedBy(appointedBy);
        setJoined(joined);

        this.workingHour = workingHour;
        this.wagesPerHour = wagesPerHour;
        this.shifts = shifts;
        this.terminated = terminated;
    }

    public double getWorkingHour() {
        return workingHour;
    }

    public void setWorkingHour(double workingHour) {
        this.workingHour = workingHour;
    }

    public double getWagesPerHour() {
        return wagesPerHour;
    }

    public void setWagesPerHour(double wagesPerHour) {
        this.wagesPerHour = wagesPerHour;
    }

    public String getShifts() {
        return shifts;
    }

    public void setShifts(String shifts) {
        if (getJoined() && !isTerminated()) {
            this.shifts = shifts;
            System.out.println("Shifts updated to: " + shifts);
        } else if (!getJoined()) {
            System.out.println("Cannot update shifts. Staff has not joined yet.");
        } else if (isTerminated()) {
            System.out.println("Cannot update shifts. Staff has been terminated.");
        }
    }

    public boolean isTerminated() {
        return terminated;
    }

    public void setTerminated(boolean terminated) {
        this.terminated = terminated;
    }

    @Override
    public void print() {
        super.print();
        System.out.println("Working Hour: " + workingHour);
        System.out.println("Wages Per Hour: " + wagesPerHour);
        System.out.println("Shifts: " + shifts);
        System.out.println("Terminated? " + terminated);
    }
}

